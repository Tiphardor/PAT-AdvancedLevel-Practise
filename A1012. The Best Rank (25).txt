#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

struct student
{
	int id;
	int grand[4];
}stu[2010];

char course[4] = {'A','C','M','E'}; //按ACME优先级排
int rk[1000000][4] = {0}; //rk[id][0]-rk[id][4]为四门课程对应的排名
int now;//区别四种分数

bool cmp(student a,student b)
{
	return a.grand[now] > b.grand[now];
}

int main()
{
	int n,m;
	scanf("%d %d",&n,&m);
	for(int i = 0;i<n;i++)
	{
		scanf("%d %d %d %d",&stu[i].id,&stu[i].grand[1],&stu[i].grand[2],&stu[i].grand[3]);
		stu[i].grand[0] = (stu[i].grand[1] + stu[i].grand[2] + stu[i].grand[3])/3; //按ACME排序
	}
	for(now = 0;now <4;now++)
	{
		sort(stu,stu+n,cmp);
		rk[stu[0].id][now] = 1; //对每一种成绩的第一名一定是1
		for(int i = 1;i<n;i++) //对剩下的进行排名 1 2 2 4 5
		{
			if(stu[i].grand[now] == stu[i-1].grand[now])
			{
				rk[stu[i].id][now] = rk[stu[i-1].id][now];
			}else{
				rk[stu[i].id][now] = i + 1;
			}
		}
	}
	int query;
	for(int i = 0;i<m;i++)
	{
		scanf("%d",&query);
		if(rk[query][0] == 0)
			printf("N/A\n");
		else
		{
			int k = 0;
			for(int j=0;j<4;j++)
			{
				if(rk[query][j] < rk[query][k])
				{
					k = j;
				}
			}
			printf("%d %c\n",rk[query][k],course[k]);
		}
	}
	return 0;
}