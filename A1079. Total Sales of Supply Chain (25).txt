#include <cstdio>
#include <cmath>
#include <vector>

using namespace std;

const int maxn = 100010;

struct Node
{
	int data;
	int depth;
	vector<int> child;
}node[maxn];

int n;
double p,r,ans = 0;

void DFS(int index)
{
	if(node[index].child.size() == 0)
	{
		ans = ans + p * pow((1+r/100),node[index].depth) * node[index].data;
		return;
	}
	for(int i = 0;i<node[index].child.size();i++)
	{
		int child = node[index].child[i];
		node[child].depth = node[index].depth + 1;
		DFS(child);
	}
}

int main()
{
  int n;
  scanf("%d %lf %lf",&n,&p,&r);
  for(int i = 0;i<n;i++)
  {
    int k;
    scanf("%d",&k);
    if(k != 0)
    {
      for(int j = 0;j<k;j++)
      {
        int child;
        scanf("%d",&child);
        node[i].child.push_back(child);
      }
    }
    else
    {
      int data;
      scanf("%d",&data);
      node[i].data = data;
    }
  }
  node[0].depth = 0;
  DFS(0);
  printf("%.1f",ans);
  return 0;

}